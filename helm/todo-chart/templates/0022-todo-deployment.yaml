apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.service.name }}
  labels:
    app: {{ .Values.service.name }}
    environment: {{ .Values.environment }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
      environment: {{ .Values.environment }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
        environment: {{ .Values.environment }}
    spec:
      containers:
        - name: {{ .Values.service.name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          env:
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: POSTGRES_DB
            - name: DATASOURCE_URL
              value: jdbc:postgresql://{{ .Values.postgres.service.name }}-service.default.svc.cluster.local:{{ .Values.postgres.service.port }}/$(POSTGRES_DB)
            - name: DATASOURCE_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: username
            - name: DATASOURCE_PASS
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
            - name: OKTA_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: todo-secret
                  key: client-id
            - name: OKTA_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: todo-secret
                  key: client-secret
          livenessProbe:
            httpGet:
              path: /todo/api/health/liveness
              port: {{ .Values.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /todo/api/health/readiness
              port: {{ .Values.service.port }}
            initialDelaySeconds: 30
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 30
          resources:
            limits:
              cpu: {{ .Values.limits.cpu }}
              memory: {{ .Values.limits.memory }}
            requests:
              cpu: {{ .Values.requests.cpu }}
              memory: {{ .Values.requests.memory }}
